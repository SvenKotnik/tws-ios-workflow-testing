name: Release Build
on:
  push:
    branches: [ main ]
  workflow_dispatch:
jobs:
  build_release:
    concurrency:
      group: release-${{ github.ref }}
    name: Build
    runs-on: "self-hosted-mac"
    steps:
      - name: Validate xcode version
        run: |
          XCODE_VERSION=$(/usr/bin/xcodebuild -version 2>/dev/null | head -1)
          echo ${XCODE_VERSION}
          if [ "$XCODE_VERSION" == "Xcode 16.0" ]
          then
              echo "Version up to date"
          else
              echo "wrong version"
              exit 1
          fi

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'true'

      - uses: jdx/mise-action@v2
        with:
          log_level: debug

      - name: Update App Version
        run: |
          NEW_VERSION="0.1.${{ github.run_number }}"
          CURRENT_PROJECT_VERSION=$(grep -o 'CURRENT_PROJECT_VERSION = [0-9]*' ./config/TWS.xcconfig | cut -d ' ' -f 3)
          sed -i '' "s/^MARKETING_VERSION = .*/MARKETING_VERSION = $NEW_VERSION/" ./config/TWS.xcconfig
          cat ./config/TWS.xcconfig
          echo "MARK_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          echo "BUILD_NUMBER=${CURRENT_PROJECT_VERSION}"  >> $GITHUB_ENV
          echo "MARK_VERSION=${NEW_VERSION}, BUILD_NUMBER=${CURRENT_PROJECT_VERSION}"

      - name: Generate Project (Tuist)
        run: |
            tuist clean
            tuist install
            tuist generate --no-open

      - name: "Instal certificates and provision profiles, Build staging"
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
          API_KEY_JSON: ${{ secrets.API_KEY_JSON }}
        run: |
          export KEYCHAIN_PATH=app-signing.keychain-db
          export CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          export API_JSON=$API_KEY_JSON

          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH

      - name: "Generate XCFrameworks"
        run: |
            ./xcframeworks_create.sh TWSKit TWSModels TWSUI

      - name: "Generate changelog"
        uses: pmuraus/spotlight-changelog-generator-action@main
        with:
          jiraBaseUrl: https://inova-it.atlassian.net/

      - name: Upload build
        uses: pmuraus/spotlight-upload-action@main
        with:
          buildName: "iOS Release"
          buildVersion: "${{env.MARK_VERSION}}-${{ env.BUILD_NUMBER }}"
          files: "./Changelog.md,XCFrameworks/TWSKit.xcframework.zip,XCFrameworks/TWSModels.xcframework.zip,XCFrameworks/TWSUI.xcframework.zip"
          apiKey: ${{secrets.SPOTLIGHT_KEY}}

      - name: Tag build
        env:
          TAG_BUILD: "${{env.MARK_VERSION}}"
        run: |
          git tag ${{env.TAG_BUILD}}
          git push origin ${{env.TAG_BUILD}}
