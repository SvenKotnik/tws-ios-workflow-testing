name: Release Build
on:
  push:
    branches: [ main ]
  workflow_dispatch:
jobs:
  build_release:
    concurrency:
      group: release-${{ github.ref }}
    name: Build
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Conventional Changelog CLI
        run: npm install -g conventional-changelog-cli

      - name: Read Version from version.txt
        id: version
        run: |
          VERSION=$(cat version.txt)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT

      - name: "Generate changelog"
        uses: pmuraus/spotlight-changelog-generator-action@main
        with:
          jiraBaseUrl: https://inova-it.atlassian.net/

      - name: Commit Changelog (optional)
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add CHANGELOG.md
          git commit -m "chore: update changelog for v$VERSION" || echo "No changes to commit"
          git push

      - name: Create Git Tag
        run: |
          git tag v$VERSION
          git push origin v$VERSION

      - name: Read Changelog for Latest Release Notes
        id: changelog
        run: |
          changelog=$(awk '/^## \[v?'"$VERSION"'\]/{flag=1; next} /^## \[/{flag=0} flag' CHANGELOG.md)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$changelog" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: Release ${{ steps.version.outputs.tag }}
          body: ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
