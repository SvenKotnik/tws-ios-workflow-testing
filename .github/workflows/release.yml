name: Release Build
on:
  push:
    branches: [ main ]
  workflow_dispatch:
jobs:
  build_release:
    concurrency:
      group: release-${{ github.ref }}
    name: Build
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Get latest version tag
        id: get_version
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          echo "Latest tag: $latest_tag"
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Bump patch version
        id: bump_version
        run: |
          IFS='.' read -r major minor patch <<< "${{ steps.get_version.outputs.latest_tag }}"
          new_version="$major.$minor.$((patch + 1))"
          echo "New version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Create changelog
        id: changelog
        run: |
          changelog=$(git log --pretty=format:"- %s" ${{ steps.get_version.outputs.latest_tag }}..HEAD)
          echo "changelog<<EOF" >> $GITHUB_ENV
          echo "$changelog" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Git Tag
        run: |
          git tag ${{ steps.bump_version.outputs.new_version }}
          git push origin ${{ steps.bump_version.outputs.new_version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.bump_version.outputs.new_version }}
          name: Release ${{ steps.bump_version.outputs.new_version }}
          body: ${{ env.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
