{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/tws\/managercreation"]}],"hierarchy":{"modules":[{"projects":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/LocalSnippet","sections":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/LocalSnippet#Displaying-a-Snippet","kind":"task"}]},{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/RemoteSnippet","sections":[{"kind":"task","reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/RemoteSnippet#Connect-with-the-TWS-portal"},{"kind":"task","reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/RemoteSnippet#Presenting-snippets"}]},{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/ManagerCreation","sections":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/ManagerCreation#Manager-creation-and-registration","kind":"task"}]},{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch","sections":[{"kind":"task","reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch#Mix-Match"}]},{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/Notifications","sections":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/Notifications#Integrating-TWSNotifications","kind":"task"}]}],"reference":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/Display-your-first-snippet"},{"projects":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomizingViews","sections":[{"kind":"task","reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomizingViews#Custom-loading-and-error-views"}]},{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomInterceptor","sections":[{"kind":"task","reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomInterceptor#Custom-interceptors"}]}],"reference":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/Customizing-TWSView"}],"paths":[["doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents","doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/$volume","doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/Display-your-first-snippet"]],"reference":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents"},"sections":[{"chapter":"Display your first snippet","content":[{"type":"paragraph","inlineContent":[{"text":"Learn different ways of creating and managing TWSManager","type":"text"}]}],"estimatedTimeInMinutes":5,"kind":"hero","title":"Creating and managing TWSManager"},{"tasks":[{"contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"inlineContent":[{"text":"In this section you will learn different approaches for creation, registration with remote services and persistance of the TWSManager.","type":"text"}],"type":"paragraph"}]}],"title":"Manager creation and registration","stepsSection":[{"media":null,"type":"step","caption":[{"content":[{"inlineContent":[{"type":"text","text":"If the instance was created for the first time, you have to register it with remote services to use it. Call registerManager() on the manager instance."}],"type":"paragraph"}],"type":"aside","name":"Note","style":"note"}],"content":[{"type":"paragraph","inlineContent":[{"text":"First way to create a TWSManager is by using TWSFactory.new(with:).","type":"text"},{"text":" ","type":"text"},{"text":"You provide the factory with your project id and the factory creates or retrieves(if instance for the configuration is already alive) a TWSManager instance for the provided configuration.","type":"text"}]}],"code":"ManagerCreation_00.swift","runtimePreview":null},{"media":null,"type":"step","caption":[{"inlineContent":[{"type":"text","text":"Use @Environment(TWSManager.self) to retrieve manager in ancestor views."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This way the manager will persist automatically as long as that view hierarchy is alive."}]}],"type":"aside","style":"note","name":"Note"}],"content":[{"inlineContent":[{"text":"Another way to create a manager is by using View extension function twsRegister(configuration:), which creates a TWSManager instance with the provided configuration, injects it into the view hiearchy and registers it with remote services.","type":"text"}],"type":"paragraph"}],"code":"ManagerCreation_01.swift","runtimePreview":null},{"media":null,"type":"step","caption":[],"content":[{"type":"paragraph","inlineContent":[{"text":"Last way to do it is using combination of both. You can create an instance using TWSFactory.new(with:) and then register and inject it into the environment using View extension function twsRegister(using:)","type":"text"}]}],"code":"ManagerCreation_02.swift","runtimePreview":null}],"anchor":"Manager-creation-and-registration"}],"kind":"tasks"},{"abstract":[{"type":"text","text":"Once you start mixing remote and local snippets, there are a few important considerations to keep in mind. Since the manager is injected into the environment, it can be accessed from anywhere in the app. However, this setup assumes that snippets are handled remotely. To successfully work with both remote and local snippets, youâ€™ll need to follow specific rules and best practices."}],"featuredEyebrow":"Tutorial","action":{"type":"reference","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch","overridingTitle":"Get started","overridingTitleInlineContent":[{"text":"Get started","type":"text"}],"isActive":true},"kind":"callToAction","title":"Combine remote and local snippets"}],"kind":"project","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/ManagerCreation"},"metadata":{"categoryPathComponent":"Tutorial-Table-of-Contents","category":"Learn to use the SDK","title":"Creating and managing TWSManager","role":"project"},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"ManagerCreation_00.swift":{"syntax":"swift","type":"file","content":["import SwiftUI","import TWS","","struct ContentView: View {","    \/\/ Create snippet with TWSFactory","    @State var manager = TWSFactory.new(with: TWSBasicConfiguration(id: \"projectId\"))","    ","    var body: some {","        ZStack {","            if let snippet = manager.snippets().first(where: { $0.id == \"snippetId\" }) {","                TWSView(snippet: snippet)","            }","        }.onAppear {","            \/\/ Register manager with remote services","            manager.registerManager()","        }","    }","}"],"identifier":"ManagerCreation_00.swift","highlights":[],"fileType":"swift","fileName":"ContentView.swift"},"doc://tws-ios.TWS/tutorials/TWS/RemoteSnippet":{"identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/RemoteSnippet","type":"topic","abstract":[{"text":"Learn how to set up a manager to handle the logic and functionality of your snippets, as well as how to seamlessly integrate them into your SwiftUI views.","type":"text"}],"kind":"project","role":"project","estimatedTime":"3min","title":"Display your first remote snippet","url":"\/tutorials\/tws\/remotesnippet"},"ManagerCreation_02.swift":{"type":"file","identifier":"ManagerCreation_02.swift","fileName":"ContentView.swift","highlights":[{"line":5},{"line":8}],"content":["import SwiftUI","import TWS","","struct ContentView: View {","    @State var manager = TWSFactory.new(with: TWSBasicConfiguration(id: \"projectId\"))","    var body: some View {","        HomeView()","            .twsRegister(using: manager)","    }","}","","struct HomeView: View {","    @Environment(TWSManager.self) var manager","    var body: some View {","        ZStack {","            if let snippet = manager.snippets().first(where: { $0.id == \"snippetId\" }) {","                TWSView(snippet: snippet)","            }","        }","    }","}"],"syntax":"swift","fileType":"swift"},"doc://tws-ios.TWS/tutorials/TWS/CustomInterceptor#Custom-interceptors":{"title":"Custom interceptors","abstract":[{"text":"Learn how to intercept desired URLs and use them in native flows","type":"text"}],"type":"section","url":"\/tutorials\/tws\/custominterceptor#Custom-interceptors","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomInterceptor#Custom-interceptors","kind":"section","role":"pseudoSymbol"},"doc://tws-ios.TWS/tutorials/TWS/CustomizingViews#Custom-loading-and-error-views":{"url":"\/tutorials\/tws\/customizingviews#Custom-loading-and-error-views","role":"pseudoSymbol","title":"Custom loading and error views","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomizingViews#Custom-loading-and-error-views","kind":"section","type":"section","abstract":[{"type":"text","text":"Learn how to customize your view to fit your applications profile."},{"type":"text","text":" "},{"type":"text","text":"Customize loading, preloading and error views."}]},"doc://tws-ios.TWS/tutorials/Tutorial-Table-of-Contents/Display-your-first-snippet":{"title":"Display your first snippet","abstract":[],"role":"article","type":"topic","kind":"article","url":"\/tutorials\/tutorial-table-of-contents\/display-your-first-snippet","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/Display-your-first-snippet"},"doc://tws-ios.TWS/tutorials/TWS/CustomizingViews":{"role":"project","type":"topic","estimatedTime":"3min","title":"Customize views to fit your application","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomizingViews","kind":"project","abstract":[{"type":"text","text":"Learn how to customize your view to fit your applications profile."},{"type":"text","text":" "},{"type":"text","text":"Customize loading, preloading and error views."}],"url":"\/tutorials\/tws\/customizingviews"},"doc://tws-ios.TWS/tutorials/Tutorial-Table-of-Contents/Customizing-TWSView":{"type":"topic","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/Customizing-TWSView","url":"\/tutorials\/tutorial-table-of-contents\/customizing-twsview","abstract":[],"role":"article","title":"Customizing TWSView","kind":"article"},"doc://tws-ios.TWS/tutorials/TWS/CustomInterceptor":{"title":"Intercepting URL requests","abstract":[{"text":"Learn how to intercept desired URLs and use them in native flows","type":"text"}],"role":"project","estimatedTime":"5min","type":"topic","kind":"project","url":"\/tutorials\/tws\/custominterceptor","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomInterceptor"},"doc://tws-ios.TWS/tutorials/TWS/Notifications#Integrating-TWSNotifications":{"type":"section","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/Notifications#Integrating-TWSNotifications","url":"\/tutorials\/tws\/notifications#Integrating-TWSNotifications","abstract":[{"type":"text","text":"In this tutorial you will learn how to easily integrate TWSNotifications in your existing push notification code base."}],"role":"pseudoSymbol","title":"Integrating TWSNotifications","kind":"section"},"doc://tws-ios.TWS/tutorials/TWS/ManagerCreation":{"url":"\/tutorials\/tws\/managercreation","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/ManagerCreation","abstract":[{"type":"text","text":"Learn different ways of creating and managing TWSManager"}],"role":"project","type":"topic","title":"Creating and managing TWSManager","estimatedTime":"5min","kind":"project"},"doc://tws-ios.TWS/tutorials/TWS/MixAndMatch#Mix-Match":{"role":"pseudoSymbol","url":"\/tutorials\/tws\/mixandmatch#Mix-Match","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch#Mix-Match","title":"Mix & Match","kind":"section","abstract":[{"type":"text","text":"Once you start mixing remote and local snippets, there are a few important considerations to keep in mind. Since the manager is injected into the environment, it can be accessed from anywhere in the app. However, this setup assumes that snippets are handled remotely. To successfully work with both remote and local snippets, youâ€™ll need to follow specific rules and best practices."}],"type":"section"},"doc://tws-ios.TWS/tutorials/Tutorial-Table-of-Contents":{"title":"Getting Started","abstract":[{"type":"text","text":"Follow the tutorials to learn how to use the SDK for displaying snippets."}],"role":"overview","type":"topic","kind":"overview","url":"\/tutorials\/tutorial-table-of-contents","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents"},"doc://tws-ios.TWS/tutorials/TWS/ManagerCreation#Manager-creation-and-registration":{"role":"pseudoSymbol","title":"Manager creation and registration","url":"\/tutorials\/tws\/managercreation#Manager-creation-and-registration","type":"section","abstract":[{"text":"Learn different ways of creating and managing TWSManager","type":"text"}],"identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/ManagerCreation#Manager-creation-and-registration","kind":"section"},"doc://tws-ios.TWS/tutorials/TWS/LocalSnippet":{"title":"Display your first local snippet","role":"project","abstract":[{"type":"text","text":"Learn how to work with TWS snippets locally without connecting to our backend service. This tutorial will guide you through the steps to display a webpage snippet in your app, bypassing the backend, and focusing solely on rendering and showcasing the snippet content."}],"type":"topic","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/LocalSnippet","kind":"project","url":"\/tutorials\/tws\/localsnippet","estimatedTime":"2min"},"doc://tws-ios.TWS/tutorials/TWS/MixAndMatch":{"url":"\/tutorials\/tws\/mixandmatch","title":"Combine remote and local snippets","kind":"project","type":"topic","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch","role":"project","estimatedTime":"5min","abstract":[{"type":"text","text":"Once you start mixing remote and local snippets, there are a few important considerations to keep in mind. Since the manager is injected into the environment, it can be accessed from anywhere in the app. However, this setup assumes that snippets are handled remotely. To successfully work with both remote and local snippets, youâ€™ll need to follow specific rules and best practices."}]},"doc://tws-ios.TWS/tutorials/TWS/RemoteSnippet#Presenting-snippets":{"identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/RemoteSnippet#Presenting-snippets","abstract":[{"text":"Learn how to set up a manager to handle the logic and functionality of your snippets, as well as how to seamlessly integrate them into your SwiftUI views.","type":"text"}],"title":"Presenting snippets","kind":"section","type":"section","role":"pseudoSymbol","url":"\/tutorials\/tws\/remotesnippet#Presenting-snippets"},"ManagerCreation_01.swift":{"fileType":"swift","content":["import SwiftUI","import TWS","","struct ContentView: View {","    var body: some View {","        HomeView()","            .twsRegister(configuration: TWSBasicConfiguration(id: \"projectId\"))","    }","}","","struct HomeView: View {","    @Environment(TWSManager.self) var manager","    var body: some View {","        ZStack {","            if let snippet = manager.snippets().first(where: { $0.id == \"snippetId\" }) {","                TWSView(snippet: snippet)","            }","        }","    }","}"],"fileName":"ContentView.swift","identifier":"ManagerCreation_01.swift","type":"file","highlights":[{"line":5},{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13}],"syntax":"swift"},"doc://tws-ios.TWS/tutorials/TWS/RemoteSnippet#Connect-with-the-TWS-portal":{"type":"section","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/tws\/remotesnippet#Connect-with-the-TWS-portal","abstract":[{"type":"text","text":"Learn how to set up a manager to handle the logic and functionality of your snippets, as well as how to seamlessly integrate them into your SwiftUI views."}],"title":"Connect with the TWS portal","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/RemoteSnippet#Connect-with-the-TWS-portal"},"doc://tws-ios.TWS/tutorials/TWS/LocalSnippet#Displaying-a-Snippet":{"identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/LocalSnippet#Displaying-a-Snippet","url":"\/tutorials\/tws\/localsnippet#Displaying-a-Snippet","kind":"section","abstract":[{"type":"text","text":"Learn how to work with TWS snippets locally without connecting to our backend service. This tutorial will guide you through the steps to display a webpage snippet in your app, bypassing the backend, and focusing solely on rendering and showcasing the snippet content."}],"type":"section","role":"pseudoSymbol","title":"Displaying a Snippet"},"doc://tws-ios.TWS/tutorials/TWS/Notifications":{"estimatedTime":"3min","title":"Integrating TWSNotifications with your notifications","url":"\/tutorials\/tws\/notifications","kind":"project","type":"topic","abstract":[{"type":"text","text":"In this tutorial you will learn how to easily integrate TWSNotifications in your existing push notification code base."}],"identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/Notifications","role":"project"}}}