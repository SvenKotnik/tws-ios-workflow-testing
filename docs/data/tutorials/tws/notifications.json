{"variants":[{"paths":["\/tutorials\/tws\/notifications"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[{"content":[{"inlineContent":[{"text":"In this tutorial you will learn how to easily integrate TWSNotifications in your existing push notification code base.","type":"text"}],"type":"paragraph"}],"title":"Integrating TWSNotifications with your notifications","chapter":"Display your first snippet","estimatedTimeInMinutes":3,"kind":"hero"},{"tasks":[{"contentSection":[{"content":[{"inlineContent":[{"type":"text","text":"This section teaches you how to structure and integrate TWSNotifications, to leverage push notifications even more."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"TWSNotifications is a mechanism that allows you to parse a notification content and display a full screen overlay of the corresponding snippet."}],"type":"paragraph"},{"name":"Note","style":"note","content":[{"inlineContent":[{"text":"This tutorial assumes you are already have working push notifications implementation.","type":"text"}],"type":"paragraph"}],"type":"aside"}],"mediaPosition":"trailing","kind":"contentAndMedia"}],"title":"Integrating TWSNotifications","anchor":"Integrating-TWSNotifications","stepsSection":[{"caption":[{"type":"aside","name":"Note","content":[{"inlineContent":[{"type":"text","text":"By the time notification is processed by this method, the TWSManager holding the snippet should already be alive."}],"type":"paragraph"}],"style":"note"}],"media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Integration of TWSNotifications is very easy. Wherever your app receives a notification, just pass the data to","type":"text"},{"text":" ","type":"text"},{"text":"handleTWSPushNotification(userInfo:) method like so.","type":"text"}]}],"code":"Notifications_00.swift","runtimePreview":null,"type":"step"},{"caption":[{"content":[{"type":"paragraph","inlineContent":[{"text":"projectId and snippetId should be replaced with actual ids, again this will work correctly if the TWSManager with the same projectId configuration already exists.","type":"text"}]}],"type":"aside","name":"Note","style":"note"}],"media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Notification data should include two keys “type” and “path”. If they are not include handleTWSPushNotification(userInfo:) will ignore the notification."}]}],"code":"Notifications.json","runtimePreview":null,"type":"step"},{"caption":[],"media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"As noted in first step TWSManager needs to be alive when push notification is handled. This usually means that the instance should be created before registering @UIApplicationDelegate","type":"text"}]}],"code":"Notifications_01.swift","runtimePreview":null,"type":"step"}]}],"kind":"tasks"},{"featuredEyebrow":"Tutorial","abstract":[{"text":"Learn how to customize your view to fit your applications profile.","type":"text"},{"text":" ","type":"text"},{"text":"Customize loading, preloading and error views.","type":"text"}],"action":{"isActive":true,"overridingTitle":"Get started","type":"reference","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomizingViews","overridingTitleInlineContent":[{"text":"Get started","type":"text"}]},"title":"Customize views to fit your application","kind":"callToAction"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents","doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/$volume","doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/Display-your-first-snippet"]],"modules":[{"projects":[{"sections":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/LocalSnippet#Displaying-a-Snippet","kind":"task"}],"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/LocalSnippet"},{"sections":[{"kind":"task","reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/RemoteSnippet#Connect-with-the-TWS-portal"},{"kind":"task","reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/RemoteSnippet#Presenting-snippets"}],"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/RemoteSnippet"},{"sections":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/ManagerCreation#Manager-creation-and-registration","kind":"task"}],"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/ManagerCreation"},{"sections":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch#Mix-Match","kind":"task"}],"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch"},{"sections":[{"kind":"task","reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/Notifications#Integrating-TWSNotifications"}],"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/Notifications"}],"reference":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/Display-your-first-snippet"},{"projects":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomizingViews","sections":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomizingViews#Custom-loading-and-error-views","kind":"task"}]},{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomInterceptor","sections":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomInterceptor#Custom-interceptors","kind":"task"}]}],"reference":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/Customizing-TWSView"}],"reference":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/Notifications"},"kind":"project","metadata":{"category":"Learn to use the SDK","role":"project","categoryPathComponent":"Tutorial-Table-of-Contents","title":"Integrating TWSNotifications with your notifications"},"references":{"doc://tws-ios.TWS/tutorials/TWS/RemoteSnippet#Connect-with-the-TWS-portal":{"type":"section","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/tws\/remotesnippet#Connect-with-the-TWS-portal","abstract":[{"type":"text","text":"Learn how to set up a manager to handle the logic and functionality of your snippets, as well as how to seamlessly integrate them into your SwiftUI views."}],"title":"Connect with the TWS portal","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/RemoteSnippet#Connect-with-the-TWS-portal"},"doc://tws-ios.TWS/tutorials/Tutorial-Table-of-Contents/Customizing-TWSView":{"type":"topic","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/Customizing-TWSView","url":"\/tutorials\/tutorial-table-of-contents\/customizing-twsview","abstract":[],"role":"article","title":"Customizing TWSView","kind":"article"},"Notifications.json":{"syntax":"json","type":"file","fileName":"aps.json","highlights":[],"content":["{","  \"aps\": {","    \"alert\": {","      \"title\": \"New Offer!\",","      \"body\": \"Tap to see our latest deals.\"","    },","    \"badge\": 1,","    \"sound\": \"default\"","  },","  \"type\": \"snippet_push\",","  \"path\": \"projectId\/snippetId\"","}"],"identifier":"Notifications.json","fileType":"json"},"doc://tws-ios.TWS/tutorials/Tutorial-Table-of-Contents":{"title":"Getting Started","abstract":[{"type":"text","text":"Follow the tutorials to learn how to use the SDK for displaying snippets."}],"role":"overview","type":"topic","kind":"overview","url":"\/tutorials\/tutorial-table-of-contents","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents"},"doc://tws-ios.TWS/tutorials/TWS/LocalSnippet":{"title":"Display your first local snippet","role":"project","abstract":[{"type":"text","text":"Learn how to work with TWS snippets locally without connecting to our backend service. This tutorial will guide you through the steps to display a webpage snippet in your app, bypassing the backend, and focusing solely on rendering and showcasing the snippet content."}],"type":"topic","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/LocalSnippet","kind":"project","url":"\/tutorials\/tws\/localsnippet","estimatedTime":"2min"},"doc://tws-ios.TWS/tutorials/TWS/MixAndMatch#Mix-Match":{"role":"pseudoSymbol","url":"\/tutorials\/tws\/mixandmatch#Mix-Match","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch#Mix-Match","title":"Mix & Match","kind":"section","abstract":[{"type":"text","text":"Once you start mixing remote and local snippets, there are a few important considerations to keep in mind. Since the manager is injected into the environment, it can be accessed from anywhere in the app. However, this setup assumes that snippets are handled remotely. To successfully work with both remote and local snippets, you’ll need to follow specific rules and best practices."}],"type":"section"},"doc://tws-ios.TWS/tutorials/TWS/MixAndMatch":{"url":"\/tutorials\/tws\/mixandmatch","title":"Combine remote and local snippets","kind":"project","type":"topic","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch","role":"project","estimatedTime":"5min","abstract":[{"type":"text","text":"Once you start mixing remote and local snippets, there are a few important considerations to keep in mind. Since the manager is injected into the environment, it can be accessed from anywhere in the app. However, this setup assumes that snippets are handled remotely. To successfully work with both remote and local snippets, you’ll need to follow specific rules and best practices."}]},"Notifications_00.swift":{"content":["import Foundation","import TWSNotifications","","class ApplicationDelegate: UIApplicationDelegate {","    \/\/ ...","    ","    \/\/ delegate method for handling background push notifications","    func application(_ application: UIApplication,","                     didReceiveRemoteNotification userInfo: [AnyHashable : Any],","                     fetchCompletionHandler completionHandler: @escaping (UIBackgroundFetchResult) -> Void) {","        ","        if TWSNotification().handleTWSPushNotification(userInfo) {","            return","        }","        ","    }","    ","    ","    \/\/ ...","}"],"type":"file","identifier":"Notifications_00.swift","fileName":"ApplicationDelegate.swift","fileType":"swift","syntax":"swift","highlights":[]},"doc://tws-ios.TWS/tutorials/TWS/Notifications":{"estimatedTime":"3min","title":"Integrating TWSNotifications with your notifications","url":"\/tutorials\/tws\/notifications","kind":"project","type":"topic","abstract":[{"type":"text","text":"In this tutorial you will learn how to easily integrate TWSNotifications in your existing push notification code base."}],"identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/Notifications","role":"project"},"doc://tws-ios.TWS/tutorials/TWS/RemoteSnippet#Presenting-snippets":{"identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/RemoteSnippet#Presenting-snippets","abstract":[{"text":"Learn how to set up a manager to handle the logic and functionality of your snippets, as well as how to seamlessly integrate them into your SwiftUI views.","type":"text"}],"title":"Presenting snippets","kind":"section","type":"section","role":"pseudoSymbol","url":"\/tutorials\/tws\/remotesnippet#Presenting-snippets"},"doc://tws-ios.TWS/tutorials/TWS/Notifications#Integrating-TWSNotifications":{"type":"section","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/Notifications#Integrating-TWSNotifications","url":"\/tutorials\/tws\/notifications#Integrating-TWSNotifications","abstract":[{"type":"text","text":"In this tutorial you will learn how to easily integrate TWSNotifications in your existing push notification code base."}],"role":"pseudoSymbol","title":"Integrating TWSNotifications","kind":"section"},"doc://tws-ios.TWS/tutorials/TWS/ManagerCreation":{"url":"\/tutorials\/tws\/managercreation","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/ManagerCreation","abstract":[{"type":"text","text":"Learn different ways of creating and managing TWSManager"}],"role":"project","type":"topic","title":"Creating and managing TWSManager","estimatedTime":"5min","kind":"project"},"doc://tws-ios.TWS/tutorials/TWS/CustomInterceptor":{"title":"Intercepting URL requests","abstract":[{"text":"Learn how to intercept desired URLs and use them in native flows","type":"text"}],"role":"project","estimatedTime":"5min","type":"topic","kind":"project","url":"\/tutorials\/tws\/custominterceptor","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomInterceptor"},"doc://tws-ios.TWS/tutorials/TWS/LocalSnippet#Displaying-a-Snippet":{"identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/LocalSnippet#Displaying-a-Snippet","url":"\/tutorials\/tws\/localsnippet#Displaying-a-Snippet","kind":"section","abstract":[{"type":"text","text":"Learn how to work with TWS snippets locally without connecting to our backend service. This tutorial will guide you through the steps to display a webpage snippet in your app, bypassing the backend, and focusing solely on rendering and showcasing the snippet content."}],"type":"section","role":"pseudoSymbol","title":"Displaying a Snippet"},"Notifications_01.swift":{"syntax":"swift","type":"file","fileName":"App.swift","highlights":[],"content":["import SwiftUI","import TWS","","struct App: App {","    @State var manager = TWSFactory.new(with: TWSBasicConfiguration(id: \"projectId\"))","    @UIApplicationDelegateAdaptor(ApplicationDelegate.self) var applicationDelegate","    ","    var body: some Scene {","        WindowGroup {","            ContentView()","                .twsRegister(using: manager)","        }","    }","}"],"identifier":"Notifications_01.swift","fileType":"swift"},"doc://tws-ios.TWS/tutorials/TWS/ManagerCreation#Manager-creation-and-registration":{"role":"pseudoSymbol","title":"Manager creation and registration","url":"\/tutorials\/tws\/managercreation#Manager-creation-and-registration","type":"section","abstract":[{"text":"Learn different ways of creating and managing TWSManager","type":"text"}],"identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/ManagerCreation#Manager-creation-and-registration","kind":"section"},"doc://tws-ios.TWS/tutorials/TWS/CustomizingViews":{"role":"project","type":"topic","estimatedTime":"3min","title":"Customize views to fit your application","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomizingViews","kind":"project","abstract":[{"type":"text","text":"Learn how to customize your view to fit your applications profile."},{"type":"text","text":" "},{"type":"text","text":"Customize loading, preloading and error views."}],"url":"\/tutorials\/tws\/customizingviews"},"doc://tws-ios.TWS/tutorials/TWS/CustomizingViews#Custom-loading-and-error-views":{"url":"\/tutorials\/tws\/customizingviews#Custom-loading-and-error-views","role":"pseudoSymbol","title":"Custom loading and error views","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomizingViews#Custom-loading-and-error-views","kind":"section","type":"section","abstract":[{"type":"text","text":"Learn how to customize your view to fit your applications profile."},{"type":"text","text":" "},{"type":"text","text":"Customize loading, preloading and error views."}]},"doc://tws-ios.TWS/tutorials/TWS/RemoteSnippet":{"identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/RemoteSnippet","type":"topic","abstract":[{"text":"Learn how to set up a manager to handle the logic and functionality of your snippets, as well as how to seamlessly integrate them into your SwiftUI views.","type":"text"}],"kind":"project","role":"project","estimatedTime":"3min","title":"Display your first remote snippet","url":"\/tutorials\/tws\/remotesnippet"},"doc://tws-ios.TWS/tutorials/Tutorial-Table-of-Contents/Display-your-first-snippet":{"title":"Display your first snippet","abstract":[],"role":"article","type":"topic","kind":"article","url":"\/tutorials\/tutorial-table-of-contents\/display-your-first-snippet","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/Display-your-first-snippet"},"doc://tws-ios.TWS/tutorials/TWS/CustomInterceptor#Custom-interceptors":{"title":"Custom interceptors","abstract":[{"text":"Learn how to intercept desired URLs and use them in native flows","type":"text"}],"type":"section","url":"\/tutorials\/tws\/custominterceptor#Custom-interceptors","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomInterceptor#Custom-interceptors","kind":"section","role":"pseudoSymbol"}}}